apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: handbook
  labels:
    app: handbook
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: handbook
  template:
    metadata:
      name: handbook
      labels:
        app: handbook
    spec:
      securityContext:
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: handbook
              topologyKey: kubernetes.io/hostname
      containers:
        - name: handbook
          image: gsoci.azurecr.io/giantswarm/handbook:{{ .Chart.Version }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: 8080
              name: http
          resources:

            requests:
              cpu: {{ .Values.resources.handbook.requests.cpu }}
              memory: {{ .Values.resources.handbook.requests.memory }}
            limits:
              cpu: {{ .Values.resources.handbook.limits.cpu }}
              memory: {{ .Values.resources.handbook.limits.memory }}

          volumeMounts:
            - mountPath: /tmp/nginx
              name: nginx-tmp
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 2
      volumes:
        - name: nginx-tmp
          emptyDir: {}
      serviceAccount: handbook
      serviceAccountName: handbook
